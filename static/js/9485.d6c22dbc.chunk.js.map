{"version":3,"file":"static/js/9485.d6c22dbc.chunk.js","mappings":"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","sources":["components/container/PageContainer.js","components/forms/custom-elements/CustomCheckbox.js","components/forms/custom-elements/CustomFormLabel.js","components/forms/custom-elements/CustomTextField.js","layouts/full-layout/breadcrumb/Breadcrumb.js","components/apps/email/EmailListItem.js","components/apps/email/EmailList.js","components/apps/email/FilterEmail.js","components/apps/email/EmailSidebar.js","components/apps/email/EmailActions.js","components/apps/email/EmailSearch.js","components/apps/email/EmailContent.js","views/apps/email/Email.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BpIcon = styled('span')(({ theme }) => ({\r\n  borderRadius: 3,\r\n  width: 21,\r\n  height: 21,\r\n\r\n  boxShadow:\r\n    theme.palette.mode === 'dark'\r\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\r\n      : 'inset 0 0 0 1px rgba(0,0,0,.2)',\r\n  backgroundColor: theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.4)' : '',\r\n\r\n  '.Mui-focusVisible &': {\r\n    outline: '0px auto rgba(19,124,189,.6)',\r\n    outlineOffset: 2,\r\n  },\r\n  'input:hover ~ &': {\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.primary : theme.palette.primary,\r\n  },\r\n  'input:disabled ~ &': {\r\n    boxShadow: 'none',\r\n    background: theme.palette.mode === 'dark' ? 'rgba(57,75,89,.5)' : 'rgba(206,217,224,.5)',\r\n  },\r\n}));\r\n\r\nconst BpCheckedIcon = styled(BpIcon)({\r\n  boxShadow: 'none',\r\n  width: 21,\r\n  height: 21,\r\n  '&:before': {\r\n    display: 'block',\r\n    width: 21,\r\n    height: 21,\r\n    backgroundImage:\r\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n      \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n      \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n    content: '\"\"',\r\n  },\r\n});\r\n\r\n// Inspired by blueprintjs\r\nfunction CustomCheckbox({ bgcolor, ...props }) {\r\n  return (\r\n    <Checkbox\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={\r\n        <BpCheckedIcon\r\n          sx={{\r\n            backgroundColor: bgcolor || 'primary.main',\r\n          }}\r\n        />\r\n      }\r\n      icon={<BpIcon />}\r\n      inputProps={{ 'aria-label': 'Checkbox demo' }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nCustomCheckbox.propTypes = {\r\n  bgcolor: PropTypes.string,\r\n};\r\n\r\nexport default CustomCheckbox;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst CustomFormLabel = styled((props) => (\r\n  <Typography variant=\"h6\" {...props} component=\"label\" htmlFor={props.htmlFor} />\r\n))(() => ({\r\n  marginBottom: '5px',\r\n  marginTop: '15px',\r\n  display: 'block',\r\n}));\r\n\r\nexport default CustomFormLabel;\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst CustomTextField = styled((props) => <TextField {...props} />)(({ theme }) => ({\r\n  '& .MuiOutlinedInput-input::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: `${theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, 0.12)' : '#dee3e9'}`,\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled': {\r\n    backgroundColor: `${theme.palette.mode === 'dark' ? 'rgba(0, 0, 0, 0.12) ' : '#f8f9fb '}`,\r\n  },\r\n  '& .MuiOutlinedInput-input.Mui-disabled::-webkit-input-placeholder': {\r\n    color: '#767e89',\r\n    opacity: '1',\r\n  },\r\n}));\r\n\r\nexport default CustomTextField;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      p: '15px',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8}>\r\n      <Typography color=\"textSecondary\" fontWeight=\"400\" variant=\"h4\">\r\n        {subtitle}\r\n      </Typography>\r\n\r\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link underline=\"none\" color=\"inherit\" component={NavLink} to={item.to}>\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color=\"textPrimary\">{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n      <Typography\r\n        fontWeight=\"700\"\r\n        variant=\"h1\"\r\n        sx={{\r\n          lineHeight: '1.235',\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display=\"flex\" alignItems=\"flex-end\">\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nBreadcrumb.propTypes = {\r\n  subtitle: PropTypes.string,\r\n  items: PropTypes.array,\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, ListItem, ListItemText, ListItemIcon, Chip, Typography } from '@mui/material';\r\nimport FeatherIcon from 'feather-icons-react';\r\n\r\nimport CustomCheckbox from '../../forms/custom-elements/CustomCheckbox';\r\n\r\nconst EmailListItem = ({\r\n  id,\r\n  onClick,\r\n  onChange,\r\n  onStar,\r\n  onImportant,\r\n  from,\r\n  subject,\r\n  time,\r\n  label,\r\n  starred,\r\n  important,\r\n  isSelected,\r\n}) => (\r\n  <ListItem button sx={{ mb: 1 }} selected={isSelected}>\r\n    <ListItemIcon>\r\n      <CustomCheckbox edge=\"start\" id={`check${id}`} tabIndex={-1} onChange={onChange} />\r\n    </ListItemIcon>\r\n    <ListItemText onClick={onClick}>\r\n      <Typography variant=\"h6\" fontWeight=\"600\">\r\n        {from}\r\n      </Typography>\r\n      <Typography variant=\"body2\" noWrap sx={{ maxWidth: { xl: '280px', xs: '100%' } }}>\r\n        {subject}\r\n      </Typography>\r\n      <Box display=\"flex\" alignItems=\"center\" sx={{ mt: '3px' }}>\r\n        <Chip\r\n          label={label}\r\n          sx={{ mr: 1, height: '21px' }}\r\n          size=\"small\"\r\n          color={label === 'Promotional' ? 'primary' : label === 'Social' ? 'error' : 'success'}\r\n        />\r\n        <FeatherIcon\r\n          icon=\"star\"\r\n          width=\"17\"\r\n          onClick={onStar}\r\n          style={{ fill: starred ? '#FFC107' : '', marginRight: '5px' }}\r\n        />\r\n        <FeatherIcon\r\n          icon=\"alert-circle\"\r\n          width=\"14\"\r\n          onClick={onImportant}\r\n          style={{ fill: important ? '#ffc0bb' : '' }}\r\n        />\r\n        <Typography fontWeight=\"500\" variant=\"caption\" noWrap sx={{ ml: 'auto' }}>\r\n          {time}\r\n        </Typography>\r\n      </Box>\r\n    </ListItemText>\r\n  </ListItem>\r\n);\r\n\r\nEmailListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  isSelected: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onStar: PropTypes.func.isRequired,\r\n  onImportant: PropTypes.func.isRequired,\r\n  from: PropTypes.string.isRequired,\r\n  subject: PropTypes.string.isRequired,\r\n  time: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  starred: PropTypes.bool.isRequired,\r\n  important: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EmailListItem;\r\n","import React from 'react';\r\nimport { List } from '@mui/material';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport EmailListItem from './EmailListItem';\r\nimport {\r\n  EmailVisibilityFilters,\r\n  openEmail,\r\n  setSelectedEmail,\r\n  starEmail,\r\n  importantEmail,\r\n} from '../../../redux/email/Action';\r\n\r\nconst EmailList = ({ showrightSidebar }) => {\r\n  const getVisibleEmails = (emails, filter, emailSearch) => {\r\n    switch (filter) {\r\n      case EmailVisibilityFilters.SHOW_INBOX:\r\n        return emails.filter(\r\n          (t) =>\r\n            t.inbox &&\r\n            !t.trash &&\r\n            t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase()),\r\n        );\r\n      case EmailVisibilityFilters.SHOW_SENT:\r\n        return emails.filter(\r\n          (t) =>\r\n            t.sent &&\r\n            !t.trash &&\r\n            t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase()),\r\n        );\r\n      case EmailVisibilityFilters.SHOW_DRAFTS:\r\n        return emails.filter(\r\n          (t) =>\r\n            t.draft &&\r\n            !t.trash &&\r\n            t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase()),\r\n        );\r\n      case EmailVisibilityFilters.SHOW_SPAM:\r\n        return emails.filter(\r\n          (t) =>\r\n            t.spam &&\r\n            !t.trash &&\r\n            t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase()),\r\n        );\r\n      case EmailVisibilityFilters.SHOW_TRASH:\r\n        return emails.filter(\r\n          (t) => t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase()),\r\n        );\r\n      case EmailVisibilityFilters.SHOW_STARRED:\r\n        return emails.filter(\r\n          (t) =>\r\n            t.starred &&\r\n            !t.trash &&\r\n            t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase()),\r\n        );\r\n      case EmailVisibilityFilters.SHOW_IMPORTANT:\r\n        return emails.filter(\r\n          (t) =>\r\n            t.important &&\r\n            !t.trash &&\r\n            t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase()),\r\n        );\r\n      case EmailVisibilityFilters.SHOW_PROMOTIONAL:\r\n        return emails.filter(\r\n          (t) =>\r\n            t.label === 'Promotional' &&\r\n            !t.trash &&\r\n            t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase()),\r\n        );\r\n      case EmailVisibilityFilters.SHOW_SOCIAL:\r\n        return emails.filter(\r\n          (t) =>\r\n            t.label === 'Social' &&\r\n            !t.trash &&\r\n            t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase()),\r\n        );\r\n      case EmailVisibilityFilters.SHOW_HEALTH:\r\n        return emails.filter(\r\n          (t) =>\r\n            t.label === 'Health' &&\r\n            !t.trash &&\r\n            t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase()),\r\n        );\r\n      default:\r\n        throw new Error(`Unknown filter: ${filter}`);\r\n    }\r\n  };\r\n\r\n  const emails = getVisibleEmails(\r\n    useSelector((state) => state.emailReducer.Emails),\r\n    useSelector((state) => state.emailReducer.visibilityFilter),\r\n    useSelector((state) => state.emailReducer.emailSearch),\r\n  );\r\n\r\n  const active = useSelector((state) => state.emailReducer.emailContent);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <List sx={{ p: 1 }}>\r\n      {emails.map((email) => (\r\n        <EmailListItem\r\n          key={email.id}\r\n          active={active}\r\n          {...email}\r\n          onClick={() => {\r\n            dispatch(openEmail(email.id));\r\n            showrightSidebar();\r\n          }}\r\n          isSelected={email.id === active}\r\n          onStar={() => dispatch(starEmail(email.id))}\r\n          onImportant={() => dispatch(importantEmail(email.id))}\r\n          onChange={(e) => {\r\n            if (e.target.checked === true) dispatch(setSelectedEmail(email.id, 'checked'));\r\n            else dispatch(setSelectedEmail(email.id, 'unchecked'));\r\n          }}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nEmailList.propTypes = {\r\n  showrightSidebar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EmailList;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ListItemText, ListItem, ListItemIcon } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { setEmailVisibilityFilter } from '../../../redux/email/Action';\r\n\r\nconst FilterEmail = ({ filter, icon, text }) => {\r\n  const active = useSelector((state) => filter === state.emailReducer.visibilityFilter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ListItem\r\n      sx={{ mb: 1 }}\r\n      button\r\n      onClick={() => dispatch(setEmailVisibilityFilter(filter))}\r\n      selected={active}\r\n    >\r\n      <ListItemIcon sx={{ minWidth: '30px' }}>\r\n        <FeatherIcon icon={icon} width=\"20\" />\r\n      </ListItemIcon>\r\n      <ListItemText>{text}</ListItemText>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nFilterEmail.propTypes = {\r\n  filter: PropTypes.any,\r\n  icon: PropTypes.node,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default FilterEmail;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  List,\r\n  Divider,\r\n  Button,\r\n  Box,\r\n  Dialog,\r\n  DialogTitle,\r\n  Slide,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n} from '@mui/material';\r\nimport FilterEmail from './FilterEmail';\r\nimport { EmailVisibilityFilters } from '../../../redux/email/Action';\r\nimport CustomTextField from '../../forms/custom-elements/CustomTextField';\r\nimport CustomFormLabel from '../../forms/custom-elements/CustomFormLabel';\r\n\r\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nconst EmailSidebar = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ p: 2, paddingBottom: '18px' }}>\r\n        <Button variant=\"contained\" fullWidth color=\"error\" onClick={handleClickOpen}>\r\n          Compose\r\n        </Button>\r\n      </Box>\r\n      <Divider />\r\n\r\n      <List sx={{ p: 1 }}>\r\n        <FilterEmail icon=\"inbox\" text=\"Inbox\" filter={EmailVisibilityFilters.SHOW_INBOX} />\r\n        <FilterEmail icon=\"send\" text=\"Sent\" filter={EmailVisibilityFilters.SHOW_SENT} />\r\n        <FilterEmail icon=\"archive\" text=\"Draft\" filter={EmailVisibilityFilters.SHOW_SPAM} />\r\n        <FilterEmail icon=\"flag\" text=\"Spam\" filter={EmailVisibilityFilters.SHOW_DRAFTS} />\r\n        <FilterEmail icon=\"trash\" text=\"Trash\" filter={EmailVisibilityFilters.SHOW_TRASH} />\r\n      </List>\r\n\r\n      <Divider />\r\n\r\n      <List sx={{ p: 1 }}>\r\n        <FilterEmail icon=\"star\" text=\"Starred\" filter={EmailVisibilityFilters.SHOW_STARRED} />\r\n        <FilterEmail\r\n          icon=\"alert-circle\"\r\n          text=\"Important\"\r\n          filter={EmailVisibilityFilters.SHOW_IMPORTANT}\r\n        />\r\n      </List>\r\n\r\n      <Divider />\r\n\r\n      <List sx={{ p: 1 }}>\r\n        <FilterEmail\r\n          icon=\"disc\"\r\n          text=\"Promotional\"\r\n          filter={EmailVisibilityFilters.SHOW_PROMOTIONAL}\r\n        />\r\n        <FilterEmail icon=\"disc\" text=\"Social\" filter={EmailVisibilityFilters.SHOW_SOCIAL} />\r\n        <FilterEmail icon=\"disc\" text=\"Health\" filter={EmailVisibilityFilters.SHOW_HEALTH} />\r\n      </List>\r\n\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        fullWidth\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\" variant=\"h4\">\r\n          Compose Mail\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\" component=\"div\">\r\n            <CustomFormLabel htmlFor=\"to-text\">To</CustomFormLabel>\r\n            <CustomTextField id=\"to-text\" fullWidth size=\"small\" variant=\"outlined\" />\r\n            <CustomFormLabel htmlFor=\"subject-text\">Subject</CustomFormLabel>\r\n            <CustomTextField id=\"subject-text\" fullWidth size=\"small\" variant=\"outlined\" />\r\n            <CustomFormLabel htmlFor=\"message-text\">Message</CustomFormLabel>\r\n            <CustomTextField\r\n              id=\"message-text\"\r\n              placeholder=\"Write a message\"\r\n              multiline\r\n              fullWidth\r\n              rows={4}\r\n              variant=\"outlined\"\r\n            />\r\n            <CustomFormLabel htmlFor=\"upload-text\">Attachment</CustomFormLabel>\r\n            <CustomTextField\r\n              type=\"file\"\r\n              autoFocus\r\n              id=\"upload-text\"\r\n              fullWidth\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n            />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\r\n            Send\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmailSidebar;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Box, Button, ButtonGroup, Menu, MenuItem } from '@mui/material';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { trashEmail, assignFolder } from '../../../redux/email/Action';\r\n\r\nconst EmailActions = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const id = useSelector((state) => state.emailReducer.selectedEmail);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      <ButtonGroup size=\"small\" aria-label=\"small button group\" fullWidth>\r\n        <Button key=\"one\" onClick={() => dispatch(trashEmail(id))}>\r\n          <FeatherIcon icon=\"trash\" width=\"17\" />\r\n        </Button>\r\n        <Button key=\"two\" onClick={handleClick}>\r\n          <FeatherIcon icon=\"folder\" width=\"17\" />\r\n        </Button>\r\n        <Button key=\"three\">\r\n          <FeatherIcon icon=\"tag\" width=\"17\" />\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        sx={{ [`& .MuiPaper-root`]: { minWidth: 100 } }}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n      >\r\n        <MenuItem onClick={() => dispatch(assignFolder(id, 'inbox'))}>Inbox</MenuItem>\r\n        <MenuItem onClick={() => dispatch(assignFolder(id, 'sent'))}>Sent</MenuItem>\r\n        <MenuItem onClick={() => dispatch(assignFolder(id, 'draft'))}>Draft</MenuItem>\r\n        <MenuItem onClick={() => dispatch(assignFolder(id, 'spam'))}>Spam</MenuItem>\r\n        <MenuItem onClick={() => dispatch(assignFolder(id, 'trash'))}>Trash</MenuItem>\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmailActions;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Box, Button } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { emailSearch } from '../../../redux/email/Action';\r\nimport CustomTextField from '../../forms/custom-elements/CustomTextField';\r\n\r\nconst EmailSearch = ({ onClick }) => {\r\n  const searchTerm = useSelector((state) => state.emailReducer.emailSearch);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box display=\"flex\" sx={{ p: 2 }}>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={onClick}\r\n        color=\"secondary\"\r\n        size=\"small\"\r\n        sx={{ mr: 1, display: { xs: 'block', lineHeight: '10px', lg: 'none' } }}\r\n      >\r\n        <FeatherIcon icon=\"menu\" width=\"16\" />\r\n      </Button>\r\n      <CustomTextField\r\n        id=\"outlined-basic\"\r\n        inputProps={{ 'aria-label': 'Search emails' }}\r\n        fullWidth\r\n        size=\"small\"\r\n        value={searchTerm}\r\n        placeholder=\"Search emails\"\r\n        variant=\"outlined\"\r\n        onChange={(e) => dispatch(emailSearch(e.target.value))}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nEmailSearch.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EmailSearch;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Box, Avatar, Typography, Divider, Chip, Button } from '@mui/material';\r\n\r\nconst EmailContent = () => {\r\n  const emailDetails = useSelector(\r\n    (state) => state.emailReducer.Emails[state.emailReducer.emailContent - 1],\r\n  );\r\n\r\n  return emailDetails ? (\r\n    <Box>\r\n      <Box display=\"flex\" alignItems=\"center\" sx={{ pb: 2 }}>\r\n        <Avatar alt={emailDetails.from} src={emailDetails.thumbnail} />\r\n        <Box sx={{ ml: 2 }}>\r\n          <Typography variant=\"h6\" fontWeight=\"600\">\r\n            {emailDetails.from}\r\n          </Typography>\r\n          <Typography variant=\"body2\">{emailDetails.To}</Typography>\r\n        </Box>\r\n        <Chip\r\n          label={emailDetails.label}\r\n          sx={{ ml: 'auto', height: '21px' }}\r\n          size=\"small\"\r\n          color={\r\n            emailDetails.label === 'Promotional'\r\n              ? 'primary'\r\n              : emailDetails.label === 'Social'\r\n              ? 'error'\r\n              : 'success'\r\n          }\r\n        />\r\n      </Box>\r\n      <Divider />\r\n      <Box sx={{ py: 2 }}>\r\n        <Typography variant=\"h4\" fontWeight=\"600\">\r\n          {emailDetails.subject}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box sx={{ py: 2 }}>\r\n        <div dangerouslySetInnerHTML={{ __html: emailDetails.emailContent }} />\r\n      </Box>\r\n      <Button variant=\"outlined\" size=\"small\" color=\"primary\">\r\n        Reply\r\n      </Button>\r\n    </Box>\r\n  ) : (\r\n    <Box sx={{}}>\r\n      <Typography variant=\"h4\">Please Select a Mail</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmailContent;\r\n","import React, { useState } from 'react';\r\nimport { Card, Button, Divider, Box, Drawer, useMediaQuery } from '@mui/material';\r\nimport Breadcrumb from '../../../layouts/full-layout/breadcrumb/Breadcrumb';\r\nimport EmailLists from '../../../components/apps/email/EmailList';\r\nimport EmailSidebar from '../../../components/apps/email/EmailSidebar';\r\nimport EmailActions from '../../../components/apps/email/EmailActions';\r\nimport EmailSearch from '../../../components/apps/email/EmailSearch';\r\nimport EmailContent from '../../../components/apps/email/EmailContent';\r\nimport PageContainer from '../../../components/container/PageContainer';\r\n\r\nconst drawerWidth = 240;\r\nconst secdrawerWidth = 320;\r\n\r\nconst Email = () => {\r\n  const [isLeftSidebarOpen, setLeftSidebarOpen] = useState(false);\r\n  const [isRightSidebarOpen, setRightSidebarOpen] = useState(false);\r\n  const lgUp = useMediaQuery((theme) => theme.breakpoints.up('lg'));\r\n  const mdUp = useMediaQuery((theme) => theme.breakpoints.up('md'));\r\n  return (\r\n    <PageContainer title=\"Email App\" description=\"this is email page\">\r\n      <Breadcrumb title=\"Email app\" subtitle=\"Look at Inbox\" />\r\n\r\n      <Card sx={{ display: 'flex', p: 0 }}>\r\n        {/* Left Part */}\r\n        {lgUp ? (\r\n          <Drawer\r\n            sx={{\r\n              width: drawerWidth,\r\n              flexShrink: 0,\r\n              display: { xs: 'none', zIndex: 0, lg: 'block' },\r\n              [`& .MuiDrawer-paper`]: { position: 'relative' },\r\n            }}\r\n            variant=\"permanent\"\r\n          >\r\n            <EmailSidebar />\r\n          </Drawer>\r\n        ) : (\r\n          <Drawer\r\n            open={isLeftSidebarOpen}\r\n            onClose={() => setLeftSidebarOpen(false)}\r\n            sx={{\r\n              width: drawerWidth,\r\n              [`& .MuiDrawer-paper`]: { width: drawerWidth },\r\n              flexShrink: 0,\r\n            }}\r\n            variant=\"temporary\"\r\n          >\r\n            <EmailSidebar />\r\n          </Drawer>\r\n        )}\r\n        {/* Middle Part */}\r\n        <Box\r\n          sx={{\r\n            minWidth: secdrawerWidth,\r\n            width: { xs: '100%', md: secdrawerWidth, lg: secdrawerWidth },\r\n            flexShrink: 0,\r\n          }}\r\n        >\r\n          <EmailSearch onClick={() => setLeftSidebarOpen(true)} />\r\n          <Divider />\r\n          <EmailActions />\r\n          <Divider />\r\n          <EmailLists showrightSidebar={() => setRightSidebarOpen(true)} />\r\n        </Box>\r\n\r\n        {/* Right Part */}\r\n        {mdUp ? (\r\n          <Drawer\r\n            anchor=\"right\"\r\n            variant=\"permanent\"\r\n            sx={{\r\n              zIndex: 0,\r\n              flex: 'auto',\r\n              [`& .MuiDrawer-paper`]: { position: 'relative' },\r\n            }}\r\n          >\r\n            <Box sx={{ p: 3 }}>\r\n              <EmailContent />\r\n            </Box>\r\n          </Drawer>\r\n        ) : (\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={isRightSidebarOpen}\r\n            onClose={() => setRightSidebarOpen(false)}\r\n            sx={{\r\n              width: drawerWidth,\r\n              flexShrink: 0,\r\n              [`& .MuiDrawer-paper`]: { width: '85%' },\r\n            }}\r\n            variant=\"temporary\"\r\n          >\r\n            <Box sx={{ p: 3 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                onClick={() => setRightSidebarOpen(false)}\r\n                sx={{ mb: 3, display: { xs: 'block', md: 'none', lg: 'none' } }}\r\n              >\r\n                {' '}\r\n                Back{' '}\r\n              </Button>\r\n              <EmailContent />\r\n            </Box>\r\n          </Drawer>\r\n        )}\r\n      </Card>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n"],"names":["_ref","title","description","children","_jsxs","Helmet","_jsx","name","content","BpIcon","styled","theme","borderRadius","width","height","boxShadow","palette","mode","backgroundColor","outline","outlineOffset","primary","background","BpCheckedIcon","display","backgroundImage","_ref2","bgcolor","props","_objectWithoutProperties","_excluded","Checkbox","_objectSpread","disableRipple","color","checkedIcon","sx","icon","inputProps","CustomFormLabel","Typography","variant","component","htmlFor","marginBottom","marginTop","CustomTextField","TextField","opacity","borderColor","concat","subtitle","items","Grid","container","p","item","xs","sm","lg","fontWeight","Breadcrumbs","separator","NavigateNextIcon","fontSize","map","to","Link","underline","NavLink","lineHeight","alignItems","Box","md","justifyContent","id","onClick","onChange","onStar","onImportant","from","subject","time","label","starred","important","isSelected","ListItem","button","mb","selected","ListItemIcon","CustomCheckbox","edge","tabIndex","ListItemText","noWrap","maxWidth","xl","mt","Chip","mr","size","FeatherIcon","style","fill","marginRight","ml","showrightSidebar","emails","filter","emailSearch","EmailVisibilityFilters","t","inbox","trash","toLocaleLowerCase","includes","sent","draft","spam","Error","getVisibleEmails","useSelector","state","emailReducer","Emails","visibilityFilter","active","emailContent","dispatch","useDispatch","List","email","EmailListItem","openEmail","starEmail","importantEmail","e","target","checked","setSelectedEmail","text","setEmailVisibilityFilter","minWidth","Transition","React","ref","Slide","direction","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClose","paddingBottom","Button","fullWidth","Divider","FilterEmail","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","placeholder","multiline","rows","type","autoFocus","DialogActions","_React$useState","_React$useState2","anchorEl","setAnchorEl","Boolean","selectedEmail","ButtonGroup","trashEmail","event","currentTarget","Menu","_defineProperty","anchorOrigin","vertical","horizontal","MenuItem","assignFolder","searchTerm","value","emailDetails","pb","Avatar","alt","src","thumbnail","To","py","dangerouslySetInnerHTML","__html","drawerWidth","isLeftSidebarOpen","setLeftSidebarOpen","_useState3","_useState4","isRightSidebarOpen","setRightSidebarOpen","lgUp","useMediaQuery","breakpoints","up","mdUp","PageContainer","Breadcrumb","Card","Drawer","flexShrink","zIndex","position","EmailSidebar","EmailSearch","EmailActions","EmailLists","anchor","flex","EmailContent"],"sourceRoot":""}